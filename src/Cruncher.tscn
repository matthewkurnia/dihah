[gd_scene load_steps=4 format=2]

[ext_resource path="res://icon.png" type="Texture" id=1]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform int color_depth : hint_range(1, 8) = 5;
uniform bool dithering = true;

uniform int horizontal_resolution = 640;
uniform int vertical_resolution = 360;

int dithering_pattern(ivec2 fragcoord) {
	const int pattern[] = {
		-4, +0, -3, +1, 
		+2, -2, +3, -1, 
		-3, +1, -4, +0, 
		+3, -1, +2, -2
	};
	
	int x = fragcoord.x % 4;
	int y = fragcoord.y % 4;
	
	return pattern[y * 4 + x];
}

void fragment() {
	ivec2 pixel_location = ivec2(SCREEN_UV / SCREEN_PIXEL_SIZE);
//	ivec2 uv = ivec2(FRAGCOORD.xy / float(resolution_scale));
	vec3 color = texture(SCREEN_TEXTURE, SCREEN_UV).rgb;
	
	// Convert from [0.0, 1.0] range to [0, 255] range
	ivec3 c = ivec3(round(color * 255.0));
	
	// Apply the dithering pattern
	if (dithering) {
		c += ivec3(dithering_pattern(pixel_location));
	}
	
	// Truncate from 8 bits to color_depth bits
	c >>= (8 - color_depth);

	// Convert back to [0.0, 1.0] range
	COLOR.rgb = vec3(c) / float(1 << color_depth);
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/color_depth = 4
shader_param/dithering = true
shader_param/horizontal_resolution = 640
shader_param/vertical_resolution = 360

[node name="Cruncher" type="ColorRect"]
material = SubResource( 2 )
anchor_right = 1.0
anchor_bottom = 1.0

[node name="Icon" type="Sprite" parent="."]
visible = false
show_behind_parent = true
position = Vector2( 282, 185 )
scale = Vector2( 9.31623, 9.31623 )
texture = ExtResource( 1 )
